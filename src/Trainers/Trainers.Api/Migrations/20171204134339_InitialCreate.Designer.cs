// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Trainers.Api.Model.Context;

namespace Trainers.Api.Migrations
{
    [DbContext(typeof(TrainersContext))]
    [Migration("20171204134339_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Trainers.Api.Model.Diet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("TrainerId");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("Diets");
                });

            modelBuilder.Entity("Trainers.Api.Model.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Carbohydrates");

                    b.Property<string>("Description");

                    b.Property<double>("Fat");

                    b.Property<string>("Name");

                    b.Property<double>("Proteins");

                    b.HasKey("Id");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("Trainers.Api.Model.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("DietId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DietId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("Trainers.Api.Model.MealIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IngredientId");

                    b.Property<int>("MealId");

                    b.Property<double>("QuantityInGrams");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MealId");

                    b.ToTable("MealIngredient");
                });

            modelBuilder.Entity("Trainers.Api.Model.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bio");

                    b.Property<string>("City");

                    b.Property<string>("Code");

                    b.HasKey("Id");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("Trainers.Api.Model.Diet", b =>
                {
                    b.HasOne("Trainers.Api.Model.Trainer", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Trainers.Api.Model.Meal", b =>
                {
                    b.HasOne("Trainers.Api.Model.Diet", "Diet")
                        .WithMany("Meals")
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Trainers.Api.Model.MealIngredient", b =>
                {
                    b.HasOne("Trainers.Api.Model.Ingredient", "Ingredient")
                        .WithMany("MealIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Trainers.Api.Model.Meal", "Meal")
                        .WithMany("MealIngredients")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Trainers.Api.Model.Trainer", b =>
                {
                    b.OwnsOne("Trainers.Api.Model.PersonalInfo", "PersonalInfo", b1 =>
                        {
                            b1.Property<int>("TrainerId");

                            b1.Property<string>("BirthCity");

                            b1.Property<DateTime>("Date");

                            b1.Property<string>("Name");

                            b1.Property<string>("Nationality");

                            b1.Property<string>("PhoneNumber");

                            b1.ToTable("Trainers");

                            b1.HasOne("Trainers.Api.Model.Trainer")
                                .WithOne("PersonalInfo")
                                .HasForeignKey("Trainers.Api.Model.PersonalInfo", "TrainerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
